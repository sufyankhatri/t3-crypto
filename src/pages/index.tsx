import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";
import { getQueryKey } from "@trpc/react-query";
import { useState } from "react";
const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const test = api.test.test.useQuery();

  const handleOnClick = async () => {
    console.log("test.data", test);
    await test.refetch({ queryKey: getQueryKey(api.test.test) });
  };
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="flex flex-col items-center gap-2">
            <p className="text-bl text-2xl">
              {/* {hello.data ? hello.data.greeting : "Loading tRPC query..."} */}
            </p>
            <AuthShowcase />
          </div>
        </div>
        <button className="flex bg-red-500 " onClick={() => handleOnClick}>
          Click me
        </button>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  console.log("re rendered!");
  const { data: sessionData } = useSession();
  const [testState, setTestState] = useState<number>(0);
  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
      <button
        onClick={() => {
          setTestState((test) => test + 1);
        }}
        className="bg-red-100"
      >
        Increase count
      </button>
      <p className="font-bold text-white">Count: {testState}</p>
    </div>
  );
};
